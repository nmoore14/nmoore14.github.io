---
interface Props {
  title: string;
  description: string;
  status?: 'live' | 'in-progress' | 'archived';
  liveUrl?: string;
  sourceUrl?: string;
  technologies?: string[];
  image?: string;
}

const { 
  title, 
  description,
  status = 'live',
  liveUrl,
  sourceUrl,
  technologies = [],
  image
} = Astro.props;

const statusColors = {
  'live': '--primary',
  'in-progress': '--secondary',
  'archived': '--accent'
};
---

<div class="card">
  <div class="card-inner">
    <div class="status-badge" data-status={status}>
      {status}
    </div>
    
    <div class="icon-container">
      {image ? (
        <img src={image} alt={title} class="project-image" />
      ) : (
        <span class="icon">
          {title.charAt(0)}
        </span>
      )}
      <div class="icon-decoration"></div>
      <div class="floating-shapes">
        <div class="shape cube"></div>
        <div class="shape star"></div>
        <div class="shape cube-alt"></div>
      </div>
    </div>

    <div class="content">
      <h3>{title}</h3>
      <p>{description}</p>
      
      {technologies.length > 0 && (
        <div class="tech-stack">
          {technologies.map(tech => (
            <span class="tech-badge">{tech}</span>
          ))}
        </div>
      )}
    </div>

    <div class="actions">
      {liveUrl && (
        <a href={liveUrl} class="cta-button primary" target="_blank" rel="noopener noreferrer">
          View Live Site
        </a>
      )}
      {sourceUrl && (
        <a href={sourceUrl} class="cta-button" target="_blank" rel="noopener noreferrer">
          Source Code
        </a>
      )}
    </div>
  </div>
</div>

<style>
  .card {
    background: linear-gradient(135deg, hsl(var(--secondary) / 0.2), hsl(var(--accent) / 0.2));
    border-radius: 24px;
    padding: 4px;
    width: 100%;
    max-width: 400px;
    position: relative;
    transition: all 0.3s ease;
  }

  .card:hover {
    transform: translateY(-4px);
  }

  .card-inner {
    background-color: hsl(var(--background));
    border-radius: 20px;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    gap: 1.5rem;
    height: 100%;
  }

  .status-badge {
    position: absolute;
    top: 1rem;
    right: 1rem;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 500;
    text-transform: capitalize;
    color: hsl(var(--background));
  }

  .status-badge[data-status="live"] {
    background-color: hsl(var(--primary));
  }

  .status-badge[data-status="in-progress"] {
    background-color: hsl(var(--secondary));
  }

  .status-badge[data-status="archived"] {
    background-color: hsl(var(--accent));
  }

  .icon-container {
    position: relative;
    width: 100px;
    height: 100px;
    margin-bottom: 1rem;
  }

  .project-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 16px;
    position: relative;
    z-index: 2;
  }

  .icon {
    position: relative;
    z-index: 2;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    font-size: 2.5rem;
    font-weight: bold;
    border-radius: 16px;
    box-shadow: 0 8px 16px hsl(var(--primary) / 0.2);
  }

  .icon-decoration {
    position: absolute;
    top: -4px;
    left: 0;
    right: 0;
    height: 12px;
    background: repeating-linear-gradient(
      90deg,
      hsl(var(--secondary)),
      hsl(var(--secondary)) 8px,
      transparent 8px,
      transparent 16px
    );
    border-radius: 16px 16px 0 0;
  }

  .floating-shapes {
    position: absolute;
    inset: -20px;
    z-index: 1;
    pointer-events: none;
  }

  .shape {
    position: absolute;
    background-color: hsl(var(--accent) / 0.3);
    animation: float 6s infinite ease-in-out;
  }

  .cube {
    width: 20px;
    height: 20px;
    top: 0;
    right: 0;
    border-radius: 4px;
    animation-delay: -2s;
  }

  .star {
    width: 16px;
    height: 16px;
    top: 50%;
    left: 0;
    clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
    background-color: hsl(var(--secondary) / 0.3);
    animation-delay: -1s;
  }

  .cube-alt {
    width: 24px;
    height: 24px;
    bottom: 0;
    left: 50%;
    border-radius: 4px;
    background-color: hsl(var(--primary) / 0.3);
    animation-delay: -3s;
  }

  .content {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  h3 {
    font-size: 1.75rem;
    color: hsl(var(--foreground));
    margin: 0;
  }

  p {
    color: hsl(var(--foreground) / 0.8);
    line-height: 1.6;
    margin: 0;
    font-size: 1rem;
  }

  .tech-stack {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
    margin-top: 0.5rem;
  }

  .tech-badge {
    padding: 0.25rem 0.75rem;
    background-color: hsl(var(--secondary) / 0.1);
    color: hsl(var(--secondary));
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .actions {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .cta-button {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    border: 2px solid hsl(var(--foreground));
    border-radius: 9999px;
    font-weight: 600;
    font-size: 0.875rem;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .cta-button.primary {
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    border-color: hsl(var(--primary));
  }

  .cta-button:hover {
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    border-color: hsl(var(--primary));
    text-decoration: none;
    transform: translateY(-2px);
  }

  .cta-button.primary:hover {
    background-color: hsl(var(--primary));
    opacity: 0.9;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0) rotate(0deg);
    }
    50% {
      transform: translateY(-10px) rotate(10deg);
    }
  }
</style> 